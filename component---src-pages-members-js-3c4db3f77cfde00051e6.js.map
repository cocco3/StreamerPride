{"version":3,"sources":["webpack:///./src/pages/members.js"],"names":["MembersIndex","membersData","data","allMarkdownRemark","edges","wrapStyles","MemberNode","member","node","fluidImage","frontmatter","image","childImageSharp","fluid","ImageNode","key","name","description","html","pronouns","twitchUrl","twitterUrl","FoundersNode","filter","founder","map","MembersNode","title","style","margin","level","css","pageQuery"],"mappings":"kUAmEeA,UA5DM,SAAC,GAIf,IAFyBC,EAE1B,EAHJC,KACEC,kBAAqBC,MAGjBC,EAAU,EAMVC,EAAa,SAAC,GAAsB,IAAD,EAAbC,EAAa,EAAnBC,KACdC,EAAU,UAAGF,EAAOG,YAAYC,aAAtB,aAAG,EAA0BC,gBAAgBC,MACvDC,EAAYL,GAAc,YAAC,IAAD,CAAKI,MAAOJ,IAE5C,OACE,YAAC,IAAD,CACEM,IAAKR,EAAOG,YAAYM,KACxBC,YAAaV,EAAOW,KACpBP,MAAOG,EACPE,KAAMT,EAAOG,YAAYM,KACzBG,SAAUZ,EAAOG,YAAYS,SAC7BC,UAAWb,EAAOG,YAAYU,UAC9BC,WAAYd,EAAOG,YAAYW,cAK/BC,EAAerB,EAClBsB,QAAO,qBAAGf,KAA0BE,YAAYc,WAChDC,IAAInB,GAEDoB,EAAczB,EACjBsB,QAAO,qBAAGf,KAA2BE,YAAYc,WACjDC,IAAInB,GAEP,OACE,YAAC,IAAD,KACE,YAAC,IAAD,CAAKqB,MAAM,YACX,YAAC,IAAD,oBAEA,mBAAKC,MAAO,CAAEC,OAAQ,sBACpB,YAAC,IAAD,CAASC,MAAO,GAAhB,aAKF,mBAAKC,IAAK1B,GAAaiB,GAEvB,mBAAKM,MAAO,CAAEC,OAAQ,sBACpB,YAAC,IAAD,CAASC,MAAO,GAAhB,YAKF,mBAAKC,IAAK1B,GAAaqB,KAOtB,IAAMM,EAAS","file":"component---src-pages-members-js-3c4db3f77cfde00051e6.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport Img from 'gatsby-image'\nimport { css } from '@emotion/core'\n\nimport { Heading, Layout, Member, PageHeading, SEO } from '../components'\n\nconst MembersIndex = ({\n  data: {\n    allMarkdownRemark: { edges: membersData }\n  }\n}) => {\n  const wrapStyles = css`\n    display: grid;\n    grid-gap: 48px;\n    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  `\n\n  const MemberNode = ({ node: member }) => {\n    const fluidImage = member.frontmatter.image?.childImageSharp.fluid\n    const ImageNode = fluidImage && <Img fluid={fluidImage} />\n\n    return (\n      <Member\n        key={member.frontmatter.name}\n        description={member.html}\n        image={ImageNode}\n        name={member.frontmatter.name}\n        pronouns={member.frontmatter.pronouns}\n        twitchUrl={member.frontmatter.twitchUrl}\n        twitterUrl={member.frontmatter.twitterUrl}\n      />\n    )\n  }\n\n  const FoundersNode = membersData\n    .filter(({ node: member }) => member.frontmatter.founder)\n    .map(MemberNode)\n\n  const MembersNode = membersData\n    .filter(({ node: member }) => !member.frontmatter.founder)\n    .map(MemberNode)\n\n  return (\n    <Layout>\n      <SEO title=\"Members\" />\n      <PageHeading>Our Members</PageHeading>\n\n      <div style={{ margin: '3.75rem 0 1.75rem' }}>\n        <Heading level={2}>\n          Founders\n        </Heading>\n      </div>\n\n      <div css={wrapStyles}>{FoundersNode}</div>\n\n      <div style={{ margin: '3.75rem 0 1.75rem' }}>\n        <Heading level={2}>\n          Members\n        </Heading>\n      </div>\n\n      <div css={wrapStyles}>{MembersNode}</div>\n    </Layout>\n  )\n}\n\nexport default MembersIndex\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(\n      filter: { fileAbsolutePath: { regex: \"/(/members/)/\" } },\n      sort: { fields: [frontmatter___name], order: ASC }\n    ) {\n      edges {\n        node {\n          excerpt\n          html\n          fields {\n            slug\n          }\n          frontmatter {\n            founder\n            name\n            pronouns\n            twitchUrl\n            twitterUrl\n            image {\n              childImageSharp {\n                fluid(maxWidth: 800) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}